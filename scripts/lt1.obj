
//
// lt1.obj
// A test of the special "set" list operators
// By Ryan Sandor Richards
//

define l1 as list(1, 2, 3, 4);
define l2 as list(3, 4, 5, 6);
define l3 as list(2, 2, 3, 3);
define l4 as list(2, 3, 4, 5);
define l5 as list(1, 3);
define inter as l1 & l2;
define inter2 as l1 & l3;
define union as l1 | l2;
define comp1 as l1 \ l2;
define comp2 as l1 \ l3;
define bcomp as l1 ^ l4;
define memb1 as 2 ? l1;
define memb2 as 29 ? l2;
define subs1 as l5 : l1;

define keys as list("L1", "L2", "L3", "L4", "L5", "L1 & L2", "L1 & L3", "L1 | L2", 
			"L1 \ L2", "L1 \ L3", "L1 ^ L4", "2 ? L1", "29 ? L2", "L5 : L1");
define vals as list(l1, l2, l3, l4, l5, inter, inter2, union, comp1, comp2, bcomp, memb1, memb2, subs1);

function main()
{

	rec (K, V)
	{
		if (isEmpty(K))
		{
			0;
		}
		else
		{
			echo(`K,  ": ", `V, "\n");
			recur(~K, ~V);
		}
	} on (keys, vals)
}

